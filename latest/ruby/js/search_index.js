var search_data = {"index":{"searchIndex":["quark","mdk","mdk","mdkimpl","session","sessionimpl","mdk()","mdkimpl()","session()","sessionimpl()","__init_fields__()","__init_fields__()","__init_fields__()","__init_fields__()","_get()","_getclass()","_getclass()","_getfield()","_getfield()","_log()","_resolve()","_resolvedcallback()","_setfield()","_setfield()","_timeout()","critical()","critical()","debug()","debug()","error()","error()","fail_interaction()","fail_interaction()","finish_interaction()","finish_interaction()","info()","info()","init()","inject()","inject()","interact()","interact()","join()","join()","mdk()","new()","new()","new()","new()","register()","register()","resolve()","resolve()","resolve_async()","resolve_async()","resolve_until()","resolve_until()","session()","session()","start()","start()","start()","start_interaction()","start_interaction()","stop()","stop()","warn()","warn()"],"longSearchIndex":["quark","quark::mdk","quark::mdk::mdk","quark::mdk::mdkimpl","quark::mdk::session","quark::mdk::sessionimpl","quark::mdk::mdk()","quark::mdk::mdkimpl()","quark::mdk::session()","quark::mdk::sessionimpl()","quark::mdk::mdk#__init_fields__()","quark::mdk::mdkimpl#__init_fields__()","quark::mdk::session#__init_fields__()","quark::mdk::sessionimpl#__init_fields__()","quark::mdk::_get()","quark::mdk::mdkimpl#_getclass()","quark::mdk::sessionimpl#_getclass()","quark::mdk::mdkimpl#_getfield()","quark::mdk::sessionimpl#_getfield()","quark::mdk::sessionimpl#_log()","quark::mdk::sessionimpl#_resolve()","quark::mdk::sessionimpl#_resolvedcallback()","quark::mdk::mdkimpl#_setfield()","quark::mdk::sessionimpl#_setfield()","quark::mdk::mdkimpl#_timeout()","quark::mdk::session#critical()","quark::mdk::sessionimpl#critical()","quark::mdk::session#debug()","quark::mdk::sessionimpl#debug()","quark::mdk::session#error()","quark::mdk::sessionimpl#error()","quark::mdk::session#fail_interaction()","quark::mdk::sessionimpl#fail_interaction()","quark::mdk::session#finish_interaction()","quark::mdk::sessionimpl#finish_interaction()","quark::mdk::session#info()","quark::mdk::sessionimpl#info()","quark::mdk::init()","quark::mdk::session#inject()","quark::mdk::sessionimpl#inject()","quark::mdk::session#interact()","quark::mdk::sessionimpl#interact()","quark::mdk::mdk#join()","quark::mdk::mdkimpl#join()","quark::mdk()","quark::mdk::mdk::new()","quark::mdk::mdkimpl::new()","quark::mdk::session::new()","quark::mdk::sessionimpl::new()","quark::mdk::mdk#register()","quark::mdk::mdkimpl#register()","quark::mdk::session#resolve()","quark::mdk::sessionimpl#resolve()","quark::mdk::session#resolve_async()","quark::mdk::sessionimpl#resolve_async()","quark::mdk::session#resolve_until()","quark::mdk::sessionimpl#resolve_until()","quark::mdk::mdk#session()","quark::mdk::mdkimpl#session()","quark::mdk::start()","quark::mdk::mdk#start()","quark::mdk::mdkimpl#start()","quark::mdk::session#start_interaction()","quark::mdk::sessionimpl#start_interaction()","quark::mdk::mdk#stop()","quark::mdk::mdkimpl#stop()","quark::mdk::session#warn()","quark::mdk::sessionimpl#warn()"],"info":[["Quark","","Quark.html","","<p>Quark 1.0.319 run at 2016-07-11 14:04:44.487689\n"],["Quark::Mdk","","Quark/Mdk.html","",""],["Quark::Mdk::MDK","","Quark/Mdk/MDK.html","","<p>n         The MDK API consists of two interfaces: MDK and Session. Then    \nMDK interface holds …\n"],["Quark::Mdk::MDKImpl","","Quark/Mdk/MDKImpl.html","",""],["Quark::Mdk::Session","","Quark/Mdk/Session.html","","<p>n         A session provides a lightweight sequential context that an      \nmicroservice can use in …\n"],["Quark::Mdk::SessionImpl","","Quark/Mdk/SessionImpl.html","",""],["MDK","Quark::Mdk","Quark/Mdk.html#method-c-MDK","()",""],["MDKImpl","Quark::Mdk","Quark/Mdk.html#method-c-MDKImpl","()",""],["Session","Quark::Mdk","Quark/Mdk.html#method-c-Session","()",""],["SessionImpl","Quark::Mdk","Quark/Mdk.html#method-c-SessionImpl","()",""],["__init_fields__","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-__init_fields__","()",""],["__init_fields__","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-__init_fields__","()",""],["__init_fields__","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-__init_fields__","()",""],["__init_fields__","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-__init_fields__","()",""],["_get","Quark::Mdk","Quark/Mdk.html#method-c-_get","(name, value)",""],["_getClass","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-_getClass","()",""],["_getClass","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_getClass","()",""],["_getField","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-_getField","(name)",""],["_getField","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_getField","(name)",""],["_log","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_log","(level, category, text)",""],["_resolve","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_resolve","(service, version)",""],["_resolvedCallback","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_resolvedCallback","(result)",""],["_setField","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-_setField","(name, value)",""],["_setField","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-_setField","(name, value)",""],["_timeout","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-_timeout","()",""],["critical","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-critical","(category, text)","<p>Record a log entry at the CRITICAL logging level.\n"],["critical","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-critical","(category, text)",""],["debug","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-debug","(category, text)","<p>Record a log entry at the DEBUG logging level.\n"],["debug","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-debug","(category, text)",""],["error","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-error","(category, text)","<p>Record a log entry at the ERROR logging level.\n"],["error","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-error","(category, text)",""],["fail_interaction","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-fail_interaction","(message)","<p>n             Record an interaction as failed.nn             This will\nupdate circuit breaker state …\n"],["fail_interaction","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-fail_interaction","(message)",""],["finish_interaction","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-finish_interaction","()","<p>n             Finish an interaction.nn             This marks an\ninteraction as completed.n\n"],["finish_interaction","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-finish_interaction","()",""],["info","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-info","(category, text)","<p>Record a log entry at the INFO logging level.\n"],["info","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-info","(category, text)",""],["init","Quark::Mdk","Quark/Mdk.html#method-c-init","()","<p>Create an unstarted instance of the MDK.\n"],["inject","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-inject","()","<p>Grabs the encoded context.\n"],["inject","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-inject","()",""],["interact","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-interact","(callable)","<p>n             This is a convenience API that will performn            \nstart_interaction() followed …\n"],["interact","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-interact","(cmd)",""],["join","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-join","(encodedContext)","<p>n             Create a new Session and join it to a distributed trace.n\n"],["join","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-join","(encodedContext)",""],["mdk","Quark","Quark.html#method-c-mdk","()",""],["new","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-c-new","()",""],["new","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-c-new","()",""],["new","Quark::Mdk::Session","Quark/Mdk/Session.html#method-c-new","()",""],["new","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-c-new","(mdk, encodedContext)",""],["register","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-register","(service, version, address)","<p>n             Registers a service endpoint with the discoveryn            \nsystem. This can be called …\n"],["register","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-register","(service, version, address)",""],["resolve","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-resolve","(service, version)","<p>n             Locate a compatible service instance.n\n"],["resolve","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-resolve","(service, version)",""],["resolve_async","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-resolve_async","(service, version)","<p>n             Locate a compatible service instance asynchronously. The\nresult is returned as a promise.n …\n"],["resolve_async","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-resolve_async","(service, version)",""],["resolve_until","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-resolve_until","(service, version, timeout)","<p>n             Locate a compatible service instance with a non-default\ntimeout.n\n"],["resolve_until","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-resolve_until","(service, version, timeout)",""],["session","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-session","()","<p>n             Creates a new Session. A Session created in this way willn   \nresult in a new …\n"],["session","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-session","()",""],["start","Quark::Mdk","Quark/Mdk.html#method-c-start","()","<p>n         Create a started instance of the MDK. This is equivalent ton     \ncallint init() followed …\n"],["start","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-start","()","<p>n             Start the MDK. An MDK instance will not communicate withn    \nfoundational services …\n"],["start","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-start","()",""],["start_interaction","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-start_interaction","()","<p>n             Start an interaction with a remote service.nn             The\nsession tracks any nodes …\n"],["start_interaction","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-start_interaction","()",""],["stop","Quark::Mdk::MDK","Quark/Mdk/MDK.html#method-i-stop","()","<p>n             Stop the MDK. When the MDK stops unregisters any servicen    \nendpoints from the …\n"],["stop","Quark::Mdk::MDKImpl","Quark/Mdk/MDKImpl.html#method-i-stop","()",""],["warn","Quark::Mdk::Session","Quark/Mdk/Session.html#method-i-warn","(category, text)","<p>Record a log entry at the WARN logging level.\n"],["warn","Quark::Mdk::SessionImpl","Quark/Mdk/SessionImpl.html#method-i-warn","(category, text)",""]]}}